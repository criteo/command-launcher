1.14.0:
  version: 1.14.0
  releaseNotes: |
    # ‚ú® New Features and Updates
      # Extra remote registry now support different sync policies: hourly, daily, weekly, and monthly. For the first iteration, the sync_policy configuration can only be modified in the configuration file. A built-in command will be provided in the future release to manage these sync policies.
      # LOG_LEVEL and DEBUG_FLAGS no longer requires user consent.
    # üêõ Bug Fixes
      # built-in update command now take into account the extra remote registries, and respect the sync_policy configuration for each registry.
    # üìù Documentation Updates
      # Update configuration documentation to reflect the new sync_policy configuration and user consent resources.
  startPartition: 0
  endPartition: 9

1.13.0:
  version: 1.13.0
  releaseNotes: |
    # ‚ú® New Features
      * built-in login command now look for three environment variables for the default user name (in order): `${APP_NAME}_USERNAME`, `$USER`, and `$USERNAME`. The default user is also printed in the output to avoid confusion.
      * a new resources `{APP_NAME}_FULL_COMMAND_NAME` will be passed to the managed command. This environment variable contains (separated by space):
        * the command launcher binary name
        * the command group name (if any)
        * the command name
      * a new boolean type configuration item `group_help_by_registry` to allow the user to group the top level commands by registry in the help message. The default value is true.
    # New Contributors:
      * @jdevera made their first contribution in PR #136
  startPartition: 0
  endPartition: 9

1.12.1:
  version: 1.12.1
  releaseNotes: |
    * ‚ú® Add a linux ARM64 variant of command-launcher.
  startPartition: 0
  endPartition: 9

1.12.0:
  version: 1.12.0
  releaseNotes: |
    * üêõ Fix the issue that zip extraction fails due to the size of the extracted file
    * ‚ú® Add new option `--timeout` to the built-in `update` command, and set the default timeout to 10 seconds
    * ‚ú® Improve autocomplate performance by applying filter in command launcher
    * ‚ú® Pass `[APP_NAME]_TO_COMPLETE` environment variable to the auto-complete extension command, this can be used to filter the auto-complete results in the extension command
    * ‚¨ÜÔ∏è Update golang version to 1.22.0 on the CI
  startPartition: 0
  endPartition: 9

1.11.1:
  version: 1.11.1
  releaseNotes: |
    * üêõ Change package internal folder permisison issue after unzip
  startPartition: 0
  endPartition: 9

1.11.0:
  version: 1.11.0
  releaseNotes: |
    * üêõ Fix 403 error when downloading package from Github
    * ‚ú® Login hook now supports any key value pair to be stored as a credential. Before it is limited to username, password, and token.
    * üö∏ Ensure folder in the package have the correct permission.
    * ‚¨ÜÔ∏è UUpdate cobra version to 1.7.0, viper version to 1.16.0
  startPartition: 0
  endPartition: 9

1.10.1:
  version: 1.10.1
  releaseNotes: |
    * üêõ Fix regression: flags aren't passed to `validArgsCmd` when `checkFlags` is true.
  startPartition: 0
  endPartition: 9

1.10.0:
  version: 1.10.0
  releaseNotes: |
    * ‚ú® Support auto-complete for flag values. Introduced two new flag properties `values` for static flag values and `valuesCmd` for dynamic flag values.
    * ‚ú® New `--list` option in the built-in rename command to list all command alias
    * üêõ Fix wrong exit code reported in metrics.
  startPartition: 0
  endPartition: 9

1.9.0:
  version: 1.9.0
  releaseNotes: |
    * ‚ú®New package level system command `__setup__`. This system hook can be triggered once a new package version is installed from the remote registry. Or manually triggered from the built-in `package setup` command.
      * New configuration `enable_package_setup_hook` to toggle the new package setup hook during package installation
      * New built-in command `package setup` to manually trigger the package setup system hook
    * ‚ú®New ways to define command flags. The newly introduced `flags` command property allows you to define the command flags with an object instead of the formatted string separated by `\t`. The `requiredFlags` property can be stilled be used to define flags, but it is marked as deprecated.
    * ‚ú®New `exclusiveFlags` command property to ensure that only one property can be specified among a set of flags. This property must be used together with the `checkFlags` property to delegate the command launcher for argument parsing
    * ‚ú®New `groupFlags` command property to ensure that all of them must be specified from the command line among a set of flags. This property must be used together with the `checkFlags` property to delegate the command launcher for argument parsing
  startPartition: 0
  endPartition: 9

1.8.1:
  version: 1.8.1
  releaseNotes: |
    * üêõ Fix DNS resolve issue on darwin amd64 under VPN. For Mac intel user, please download this version.
  startPartition: 0
  endPartition: 9

1.8.0:
  version: 1.8.0
  releaseNotes: |
    * ‚ú®Support multiple remote registry. From version 1.8.0, you are able to define multiple remote registries. Command launcher synchronizes the commands with all these remote registries at the end of each command execution. This is useful for several scenarios: for example, supporting internal or experimental commands, different teams target their commands to different group of audience.
    * ‚ú®Built-in command `remote` command to mange multiple remote registries.
        * `remote list`: list all remote registries
        * `remote delete`: delete specific remote registry
        * `remote add`: add a new remote registry
    * ‚ú®Built-in package management related commands are regrouped into `package` command:
        * `package list`: list installed local and dropin packages and remote packages. It also provides the possibility to show the installed commands
        * `package install`: install dropin packages from git repository or remote/local zip file
        * `package delete`: delete installed dropin packages
    * ‚ú®New command name conflict resolution system: Each command now has a unique full name in form of [regitry]@[package]@[group]@[name]. When two commands register to the same group and name. One of them will be registered with its full group name.

        For example, two command `hello@greeting@pkg1@repo1` and `hello@greeting@pkg2@repo2`. These two commands have the same group name and command name (greeting hello). The first one will be registered as `cola greeting hello`, the second one will be registered as command `cola greeting@@pkg2@repo2 hello`. Note: `greeting@@pkg2@repo2` is the full name of the group command `greeting` defined in pkg2 and repo2.
    * ‚ú®New built-in `rename` command. Now it is possible to rename both group and sub command to a different name.
    * ‚ú®New resource `PACKAGE_DIR`. Each command now can access its package's absolute path through the `PACKAGE_DIR` resource. This resource doesn't require user consent.

    * üî•Metrics system hook interface change. Now the metrics system hook accepts two new parameters: repo/registry name, package name. The full list of parameters:
        1. repository/registry name (see remote command)
        2. package name
        3. command group name, or ‚Äúdefault‚Äù if no group
        4. command name
        5. user partition
        6. command exit code
        7. command execution duration in nano seconds
        8. error message or ‚Äúnil‚Äù if no error
        9. command start timestamp in seconds
  startPartition: 0
  endPartition: 9

1.7.0:
  version: 1.7.0
  releaseNotes: |
    * ‚ú®New mechanism to access resources with user consent, resources required user consent:
        * username
        * password
        * login_token
        * log_level
    * ‚ú®New system package with system command. Now supports two types of system command:
        * __login__: extends the built-in login command
        * __metrics__: extends the built-in metrics
    * ‚ú®New package management with new built-in commands:
        * list: list installed local and dropin packages and remote packages. It also provides the possibility to show the installed commands
        * install: install dropin packages from git repository or remote/local zip file
        * delete: delete installed dropin packages
    * ‚ú®New URL convention for command launcher self update. You can now use the Github release file as the latest version
    * ‚ú®New configurations:
        * enable_user_consent
        * user_consent_life
        * system_package
        * system_package_public_key
        * system_package_public_key_file
        * verify_package_checksum
        * verify_package_signature
    * üîíÔ∏èEnable package checksum verification
    * ‚ôªÔ∏èRefactor local repository management and remote management
    * üî®Default local build version now takes the current branch name: [branch name]-dev. See build.sh
  startPartition: 0
  endPartition: 9

1.6.0:
  version: 1.6.0
  releaseNotes: |
    - Add the PackageDir context variable to reference the package's directory, same as the Cache and Root context variables. Cache and Root variables are deprecated.
    - Extend the format of the flag definition. Now it is possible to add bool type flags: [name] \t [shorthand] \t [description] \t [type] \t [default].
    - New command definition field in manifest, checkFlags. The default value is false, when it is true, before executing the command, the arguments will be parsed, and the parsed flags and args will be passed to the command in form of an environment variable: [APP_NAME]_FLAG_[FLAG_LONG_NAME] and [APP_NAME]_ARG_[ARG_INDEX_STARTS_FROM_1]
    - New command definition field in the manifest: argsUsage to customize the one-line help message. This field will take effect when checkFlags=true
    - New command definition field in the manifest: examples to customize the examples in the help message. This field will take effect when checkFlags=true
  startPartition: 0
  endPartition: 9
